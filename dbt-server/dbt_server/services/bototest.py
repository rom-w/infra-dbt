import boto3

s = boto3.Session(
    "ASIAXQLOLDSBRKTTIP75",
    "n8gRAJZYQt6A5OL2Uydakkqj1TNzAg2ILCGOH6E6",
    "IQoJb3JpZ2luX2VjEL3//////////wEaCXVzLWVhc3QtMSJIMEYCIQCEBXJH9vwVvi6wD2+uZVEUr1ch5arQpOqGstkbr5RkKQIhAM3fetr68fZCyjfrIMWJFpAsD9vqODcF9SYfY7n0gfNpKqIDCEUQABoMNTE2MTY0MzYxMzQ3IgyiUmaA/lzLboAusK0q/wK/CHzoxu9rJ4I0fUcQOFUy04sMvhpqXdaS0rhdGHrqUNF3R034VcfZfmzrHlejKHtAuXctHw4HLdpheCzfXRwM2xtEiHXBsiW09IKTFA1Olv4gvevCdu7Z6dO4uYu4O9x3rk4lRy4S3F7UOsu7wVVzL8yydRKldIrmFp1lSzEj0HTG5clwR1dF+vdsGcOAlw/v8wRmyAHE90JTpsW1losLXcOfiU5VUBosqBimOQIaPcC9w44JPHgEaErXM4tazOjbTMQ/WIProNl50/djNTb7Bqf1h4bqjrHQpPxiYjSenEfJN/j0zhnF5a64Y2RLAAy/L1BZML6y7dJzBW9BY/f7mOOpDrqfXdnTbL1U04hqPaewzoG1xr6LmOWPsns5BMFh/Wc7Yr9lcbF2EpNv6RipYCxIc7asTIis8O34S1M5fdl9H6bGEPpd/XcuCM8+I+xqckprZ9vQeHWimaIfFK9TBHySy4i32mk38RARXJxrI7O2PUT5QFjKWDsae70ivzD64IOfBjrfAR7YULAI4RYjhbNE/S0CnuG3dbysvVNysoZOvqGfKfy0ysXRcL3ImZiUNFEMgVwI7T9alv/g+HP5QCJowuFIdt1c2UTzLsGcSnpscHpnSxI5JQxJJsg1Cl02YTu0mqOH9g1gWfOVsPstpuUTeHJeYrMj5qP46SuBfFak0BlSXYtzE/Z95NvjC2TGNiZg9//lIzq8UVLqfq5Jg62ZHgL2ae/A3yvcmpiYnvCfzmaKDtz7NU1NM3tMQKwCtK2H5noPQcXPJG77UJezlykWxPoFnB61KXvBaCfPaIpy2BwW3qY="
                  )

s3 = s.resource('s3')

txt_data = b'This is the content of the file uploaded from python boto3 asdfasdf'

object = s3.Object('dataagg-storage-datorama-dev1-uswest2-cdp001', 'file_uploaded_by_boto3.txt')

# result = object.put(Body=txt_data)

res = object.get()
print(res)


#  export
#  AWS_ACCESS_KEY_ID=ASIAXQLOLDSBRKTTIP75
#  AWS_SECRET_ACCESS_KEY=n8gRAJZYQt6A5OL2Uydakkqj1TNzAg2ILCGOH6E6
#  AWS_SESSION_TOKEN=IQoJb3JpZ2luX2VjEL3//////////wEaCXVzLWVhc3QtMSJIMEYCIQCEBXJH9vwVvi6wD2+uZVEUr1ch5arQpOqGstkbr5RkKQIhAM3fetr68fZCyjfrIMWJFpAsD9vqODcF9SYfY7n0gfNpKqIDCEUQABoMNTE2MTY0MzYxMzQ3IgyiUmaA/lzLboAusK0q/wK/CHzoxu9rJ4I0fUcQOFUy04sMvhpqXdaS0rhdGHrqUNF3R034VcfZfmzrHlejKHtAuXctHw4HLdpheCzfXRwM2xtEiHXBsiW09IKTFA1Olv4gvevCdu7Z6dO4uYu4O9x3rk4lRy4S3F7UOsu7wVVzL8yydRKldIrmFp1lSzEj0HTG5clwR1dF+vdsGcOAlw/v8wRmyAHE90JTpsW1losLXcOfiU5VUBosqBimOQIaPcC9w44JPHgEaErXM4tazOjbTMQ/WIProNl50/djNTb7Bqf1h4bqjrHQpPxiYjSenEfJN/j0zhnF5a64Y2RLAAy/L1BZML6y7dJzBW9BY/f7mOOpDrqfXdnTbL1U04hqPaewzoG1xr6LmOWPsns5BMFh/Wc7Yr9lcbF2EpNv6RipYCxIc7asTIis8O34S1M5fdl9H6bGEPpd/XcuCM8+I+xqckprZ9vQeHWimaIfFK9TBHySy4i32mk38RARXJxrI7O2PUT5QFjKWDsae70ivzD64IOfBjrfAR7YULAI4RYjhbNE/S0CnuG3dbysvVNysoZOvqGfKfy0ysXRcL3ImZiUNFEMgVwI7T9alv/g+HP5QCJowuFIdt1c2UTzLsGcSnpscHpnSxI5JQxJJsg1Cl02YTu0mqOH9g1gWfOVsPstpuUTeHJeYrMj5qP46SuBfFak0BlSXYtzE/Z95NvjC2TGNiZg9//lIzq8UVLqfq5Jg62ZHgL2ae/A3yvcmpiYnvCfzmaKDtz7NU1NM3tMQKwCtK2H5noPQcXPJG77UJezlykWxPoFnB61KXvBaCfPaIpy2BwW3qY=
